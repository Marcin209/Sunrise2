//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sunrise.API.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class ExceptionMessages {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal ExceptionMessages() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Sunrise.API.Resources.ExceptionMessages", typeof(ExceptionMessages).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Wrong argument.
        /// </summary>
        internal static string ArgumentException {
            get {
                return ResourceManager.GetString("ArgumentException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Wrong date format.
        /// </summary>
        internal static string FormatException {
            get {
                return ResourceManager.GetString("FormatException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Latitude can&apos;t be more than 90 or less than -90 degrees.
        /// </summary>
        internal static string LatitudeException {
            get {
                return ResourceManager.GetString("LatitudeException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Latitude must be a number.
        /// </summary>
        internal static string LatitudeNaN {
            get {
                return ResourceManager.GetString("LatitudeNaN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Longitude can&apos;t be more than 180 or less than -180 degrees.
        /// </summary>
        internal static string LongitudeException {
            get {
                return ResourceManager.GetString("LongitudeException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Longitude must be a number.
        /// </summary>
        internal static string LongitudeNaN {
            get {
                return ResourceManager.GetString("LongitudeNaN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Wrong timezone.
        /// </summary>
        internal static string OverflowException {
            get {
                return ResourceManager.GetString("OverflowException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Wrong timezone format.
        /// </summary>
        internal static string TimezoneFormat {
            get {
                return ResourceManager.GetString("TimezoneFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Wrong timezone. Timezones ends only with &quot;:00&quot; or &quot;:30&quot;.
        /// </summary>
        internal static string TimezoneMinutes {
            get {
                return ResourceManager.GetString("TimezoneMinutes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Date doesn&apos;t exist.
        /// </summary>
        internal static string WrongDate {
            get {
                return ResourceManager.GetString("WrongDate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Timezone not recognized.
        /// </summary>
        internal static string WrongTimezone {
            get {
                return ResourceManager.GetString("WrongTimezone", resourceCulture);
            }
        }
    }
}
